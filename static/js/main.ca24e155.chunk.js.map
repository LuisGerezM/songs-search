{"version":3,"sources":["helpers/helpHttp.js","components/Loader.js","components/Message.js","components/SongArtist.js","components/SongLyric.js","components/SongDetails.js","components/SongForm.js","components/SongsSearch.js","App.js","reportWebVitals.js","index.js"],"names":["helpHttp","customFetch","endpoint","options","defaultHeader","accept","controller","AbortController","signal","method","headers","body","JSON","stringify","setTimeout","abort","fetch","then","response","ok","json","Promise","reject","err","status","statusText","catch","error","get","url","post","put","del","Loader","className","Message","msg","styles","padding","marginBottom","textAlign","color","fontWeight","backgroundColor","bgColor","style","dangerouslySetInnerHTML","__html","SongArtist","artist","strArtist","src","strArtistThumb","alt","intBornYear","intDiedYear","strCountry","strGenre","strStyle","href","strWebsite","target","rel","strBiographyEN","SongLyric","title","lyrics","whiteSpace","lyrics_body","SongDetails","lyricStatusCode","search","lyric","bio","message","header","status_code","name","song","artists","initialForm","SongForm","handleSearch","useState","form","setForm","handleChange","e","value","onSubmit","preventDefault","alert","type","placeholder","onChange","SongsSearch","setSearch","setLyric","setBio","loading","setLoading","useEffect","a","artistUrl","songUrl","all","artistRes","songRes","fetchData","data","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca24e155.chunk.js","sourcesContent":["export const helpHttp = () => {\n  const customFetch = (endpoint, options) => {\n    const defaultHeader = {\n      accept: \"application/json\",\n    };\n\n    // Si demora en responder\n    const controller = new AbortController();\n    options.signal = controller.signal;\n    options.method = options.method || \"GET\";\n    options.headers = options.headers\n      ? { ...defaultHeader, ...options.headers }\n      : defaultHeader;\n\n    options.body = JSON.stringify(options.body) || false;\n\n    if (!options.body) delete options.body;\n\n    // Esperamos respuesta por 3 seg nomás\n    setTimeout(() => {\n      controller.abort();\n    }, 3000);\n\n    return fetch(endpoint, options)\n      .then((response) =>\n        response.ok\n          ? response.json()\n          : Promise.reject({\n              err: true,\n              status: response.status || \"00\",\n              statusText: response.statusText || \"Ocurrió un error\",\n            })\n      )\n      .catch((error) => error);\n  };\n\n  const get = (url, options = {}) => customFetch(url, options);\n\n  const post = (url, options = {}) => {\n    options.method = \"POST\";\n    return customFetch(url, options);\n  };\n  const put = (url, options = {}) => {\n    options.method = \"PUT\";\n    return customFetch(url, options);\n  };\n  const del = (url, options = {}) => {\n    options.method = \"DELETE\";\n    return customFetch(url, options);\n  };\n\n  return {\n    get,\n    post,\n    put,\n    del,\n  };\n};\n","import \"./Loader.css\";\nconst Loader = () => {\n  return (\n    <div className=\"lds-spinner\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default Loader;\n","const Message = ({ msg, bgColor }) => {\n  let styles = {\n    padding: \"1rem\",\n    marginBottom: \"1rem\",\n    textAlign: \"center\",\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    backgroundColor: bgColor,\n  };\n\n  return (\n    <div style={styles}>\n      {/* Inyectando HTML; No muy recomendado */}\n      <p dangerouslySetInnerHTML={{ __html: msg }} />\n    </div>\n  );\n};\n\nexport default Message;\n","const SongArtist = ({ artist }) => {\n  return (\n    <div className=\"artist-class\">\n      <h3>Nombre: {artist.strArtist}</h3>\n      <img src={artist.strArtistThumb} alt={artist.strArtist} />\n      <p>\n        {artist.intBornYear} - {artist.intDiedYear || \"Presente\"}\n      </p>\n      <p>\n        <b>País: </b>\n        {artist.strCountry}\n      </p>\n      <p>\n        <b>Género: </b>\n        {artist.strGenre} - {artist.strStyle}\n      </p>\n      <a href={`http://${artist.strWebsite}`} target=\"_blank\" rel=\"noreferrer\">\n        <b>Sitio Web Oficial</b>\n      </a>\n      <p>\n        <b>Biografía: </b> {artist.strBiographyEN}\n      </p>\n    </div>\n  );\n};\n\nexport default SongArtist;\n","const SongLyric = ({ title, lyrics }) => {\n  return (\n    <section>\n      <h3>{title}</h3>\n      <blockquote style={{ whiteSpace: \"pre-wrap\" }}>\n        {lyrics?.body?.lyrics?.lyrics_body}\n      </blockquote>\n    </section>\n  );\n};\n\nexport default SongLyric;\n","import Message from \"./Message\";\nimport SongArtist from \"./SongArtist\";\nimport SongLyric from \"./SongLyric\";\n\nconst SongDetails = ({ search, lyric, bio }) => {\n  if (!lyric || !bio) return null;\n\n  let lyricStatusCode;\n  if (lyric.message.header?.status_code === 404) {\n    lyricStatusCode = 400;\n  }\n\n  return (\n    <>\n      {lyric.err ||\n      lyric.name === \"AbortError\" ||\n      lyricStatusCode === 404 ||\n      lyricStatusCode === 400 ? (\n        <Message\n          msg={`Error: no existe la canción \"<em>${search.song}</em>\"`}\n          bgColor=\"#dc3545\"\n        />\n      ) : (\n        <SongLyric title={search.song} lyrics={lyric.message} />\n      )}\n\n      {bio.artists ? (\n        <SongArtist artist={bio.artists[0]} />\n      ) : (\n        <Message\n          msg={`Error: no existe el intérprete \"<em>${search.artist}</em>\"`}\n          bgColor=\"#dc3545\"\n        />\n      )}\n    </>\n  );\n};\n\nexport default SongDetails;\n","import { useState } from \"react\";\n\n// Estado inicial\nconst initialForm = {\n  artist: \"\",\n  song: \"\",\n};\n\nconst SongForm = ({ handleSearch }) => {\n  const [form, setForm] = useState(initialForm);\n\n  const handleChange = (e) => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // evento submit\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!form.artist || !form.song) {\n      alert(\"Datos Incompletos\");\n      return;\n    } else {\n      handleSearch(form);\n      // Limpiamos form\n      setForm(initialForm);\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"artist\"\n          placeholder=\"Nombre del Interprete; Por Ej: Kendrick Lamar\"\n          onChange={handleChange}\n          value={form.artist}\n        />\n        <input\n          type=\"text\"\n          name=\"song\"\n          placeholder=\"Nombre de la canción; Por Ej: Barbed Wire\"\n          onChange={handleChange}\n          value={form.song}\n        />\n        <input className=\"submit\" type=\"submit\" value=\"Enviar\" />\n      </form>\n    </div>\n  );\n};\n\nexport default SongForm;\n","import { useEffect, useState } from \"react\";\nimport { helpHttp } from \"../helpers/helpHttp\";\nimport Loader from \"./Loader\";\nimport SongDetails from \"./SongDetails\";\nimport SongForm from \"./SongForm\";\n\nconst SongsSearch = () => {\n  // Guarda artista, cancion a buscar\n  const [search, setSearch] = useState(null);\n  // Guarda info del artista\n  const [lyric, setLyric] = useState(null);\n  // Guarda info del artista canción\n  const [bio, setBio] = useState(null);\n\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (search === null) return;\n\n    const fetchData = async () => {\n      const { artist, song } = search;\n\n      let artistUrl = `https://theaudiodb.com/api/v1/json/1/search.php?s=${artist}`;\n\n      // Los datos sensibles se almacenan en un .env, en este caso no hay problema de dejarla aqui\n      let apiKey = \"81a4296fc28587ccf9026ea9feccca77\";\n      let songUrl = `https://api.musixmatch.com/ws/1.1/matcher.lyrics.get?format=json&callback=callback&q_artist=${artist}&q_track=${song}&apikey=${apiKey}`;\n\n      // Cargando Spiner\n      setLoading(true);\n\n      // Desestructuro al Promise.all\n      const [artistRes, songRes] = await Promise.all([\n        helpHttp().get(artistUrl),\n        helpHttp().get(songUrl),\n      ]);\n\n      setBio(artistRes);\n      setLyric(songRes);\n      setLoading(false);\n    };\n\n    fetchData();\n  }, [search]);\n\n  const handleSearch = (data) => {\n    setSearch(data);\n  };\n\n  return (\n    <div>\n      <h2>Songs Search</h2>\n      <article className=\"grid-1-3\">\n        <SongForm handleSearch={handleSearch} />\n        {loading && <Loader />}\n        {search && !loading && (\n          <SongDetails search={search} lyric={lyric} bio={bio} />\n        )}\n      </article>\n    </div>\n  );\n};\n\nexport default SongsSearch;\n","import SongsSearch from \"./components/SongsSearch\";\n\nfunction App() {\n  return (\n    <>\n      <hr />\n      <SongsSearch />\n      <hr />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}